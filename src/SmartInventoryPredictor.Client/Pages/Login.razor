@page "/login"
@inject AuthService AuthService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>Login - Smart Inventory Predictor</PageTitle>

<div class="min-vh-100 d-flex align-items-center bg-light">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-4">
                <div class="card shadow">
                    <div class="card-body p-5">
                        <div class="text-center mb-4">
                            <i class="fas fa-boxes-stacked fs-1 text-primary mb-3"></i>
                            <h2 class="h4 mb-1">Smart Inventory</h2>
                            <p class="text-muted">Predictor</p>
                        </div>

                        @if (!string.IsNullOrEmpty(_errorMessage))
                        {
                            <div class="alert alert-danger" role="alert">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                @_errorMessage
                            </div>
                        }

                        <form @onsubmit="HandleLogin" @onsubmit:preventDefault="true">
                            <div class="mb-3">
                                <label for="username" class="form-label">Username</label>
                                <input type="text" class="form-control" id="username" @bind="_username" required>
                                <div class="form-text">
                                    Demo: admin/admin123 or demo/demo123
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="password" class="form-label">Password</label>
                                <input type="password" class="form-control" id="password" @bind="_password" required>
                            </div>

                            <div class="mb-3 form-check">
                                <input type="checkbox" class="form-check-input" id="rememberMe" @bind="_rememberMe">
                                <label class="form-check-label" for="rememberMe">
                                    Remember me
                                </label>
                            </div>

                            <button type="submit" class="btn btn-primary w-100" disabled="@_isLoading">
                                @if (_isLoading)
                                {
                                    <span class="spinner-border spinner-border-sm me-2"></span>
                                }
                                Sign In
                            </button>
                        </form>

                        <hr class="my-4">

                        <div class="text-center">
                            <small class="text-muted">
                                Demo Application - Smart Inventory Management System
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string _username = "";
    private string _password = "";
    private bool _rememberMe = false;
    private bool _isLoading = false;
    private string _errorMessage = "";

    protected override async Task OnInitializedAsync()
    {
        // Check if already authenticated
        if (await AuthService.IsAuthenticatedAsync())
        {
            Navigation.NavigateTo("/");
        }
    }

    private async Task HandleLogin()
    {
        _isLoading = true;
        _errorMessage = "";
        StateHasChanged();

        try
        {
            var success = await AuthService.LoginAsync(_username, _password);

            if (success)
            {
                Navigation.NavigateTo("/");
            }
            else
            {
                _errorMessage = "Invalid username or password. Please try again.";
            }
        }
        catch (Exception ex)
        {
            _errorMessage = "An error occurred during login. Please try again.";
        }
        finally
        {
            _isLoading = false;
            StateHasChanged();
        }
    }
}